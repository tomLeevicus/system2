server:
  port: 8080
  servlet:
    context-path: /api

spring:
  # 数据源配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://192.168.80.128:3306/system2?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true&allowMultiQueries=true
#    url: jdbc:mysql://localhost:3306/system2?useUnicode=true&characterEncoding=utf8&zeroDateTimeBehavior=convertToNull&useSSL=true&serverTimezone=GMT%2B8&nullCatalogMeansCurrent=true&allowMultiQueries=true
    username: root
    password: root
#    password: 123456
    druid:
      initial-size: 5
      min-idle: 10
      max-active: 20
      max-wait: 60000
      time-between-eviction-runs-millis: 60000
      min-evictable-idle-time-millis: 300000
      max-evictable-idle-time-millis: 900000
      validation-query: SELECT 1
      test-while-idle: true
      test-on-borrow: false
      test-on-return: false

  # Jackson配置
  jackson:
    date-format: yyyy-MM-dd HH:mm:ss
    time-zone: GMT+8
    default-property-inclusion: non_null
    serialization:
      indent_output: true
      fail_on_empty_beans: false
    deserialization:
      fail_on_unknown_properties: false

  # Redis配置
  data:
    redis:
      # Redis数据库索引（默认为0）
      database: 0
      # Redis服务器地址
      host: 192.168.80.128
#      host: localhost
      # Redis服务器连接端口
      port: 6379
      # Redis服务器连接密码（默认为空）
      password: 
      # 连接超时时间
      timeout: 10s
      lettuce:
        pool:
          # 连接池最大连接数
          max-active: 8
          # 连接池最大阻塞等待时间（使用负值表示没有限制）
          max-wait: -1ms
          # 连接池中的最大空闲连接
          max-idle: 8
          # 连接池中的最小空闲连接
          min-idle: 0

# MyBatis-Plus配置
mybatis-plus:
  # 搜索指定包别名
  typeAliasesPackage: com.project.system2.domain.entity
  # 配置mapper的扫描，找到所有的mapper.xml映射文件
  mapperLocations: classpath*:mapper/**/*.xml
  # 加载全局的配置文件
  configLocation: classpath:mybatis-config.xml
  global-config:
    db-config:
      logic-delete-field: delFlag
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:mapper/**/*.xml

# 日志配置
logging:
  level:
    org.springframework.security: DEBUG
    org.springframework.web: DEBUG
    com.project.system2: TRACE
    com.project.system2.security: DEBUG
    com.project.system2.mapper: TRACE

# Flowable配置
flowable:
  # 基础配置
  database-schema-update: true
  async-executor-activate: false
  check-process-definitions: true
  history-level: full
  
  # Flowable UI 配置
  modeler:
    app:
      rest-enabled: true
      deployment-api-url: http://localhost:${server.port}/api
      context-root: flowable-modeler
      rest-root: flowable-modeler
      security:
        basic:
          enabled: false
      authentication-mode: verify-privilege
      cors:
        enabled: true
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
        exposed-headers: "*"
        allow-credentials: true
  
  # IDM 配置
  idm:
    app:
      admin:
        user-id: admin
        password: test
        first-name: Admin
        last-name: User
      security:
        basic:
          enabled: false
      authentication-mode: verify-privilege
      cors:
        enabled: true
        allowed-origins: "*"
        allowed-methods: "*"
        allowed-headers: "*"
        exposed-headers: "*"
        allow-credentials: true
    ldap:
      enabled: false

  # 禁用不需要的引擎
  dmn:
    enabled: false
  cmmn:
    enabled: false
  content:
    enabled: false
  form:
    enabled: false
  event-registry:
    enabled: false

  auto-complete-task-keys: userApply,otherTaskKey # 配置需要自动完成的节点key

  process-def-location: D:\\Code\\processes\\  # 修改为指定路径
  # process-def-location: /var/process-definitions/  # 生产环境路径

# 在已有权限配置中添加
permission:
  workflow:
    process:
      deploy: workflow:process:deploy

springfox:
  documentation:
    swagger-ui:
      enabled: true
      base-url: /api  # 如果项目有统一前缀
    api-docs:
      path: /v2/api-docs

# 保留统一后的配置
security:
  token:
    secret: "VGVzdEtleS0yNTYtYml0LXNlY3JldC1oZXJlLTAxMjM0NTY3ODkwMTIzNDU2Nzg5MDEyMzQ1Njc4OTA="
    expire-time: 120  # 单位分钟
    refresh-time: 30  # 自动刷新阈值
    prefix: "Bearer "
    header: Authorization

# MinIO配置
minio:
  endpoint: http://192.168.80.128:9000  # MinIO服务地址
  accessKey: minioadmin             # 访问密钥
  secretKey: minioadmin             # 密钥
  bucketName: user-pic           # 默认存储桶